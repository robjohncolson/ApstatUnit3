{
  "fileName": "index.html",
  "description": "A single-page web application designed as a learning aid for AP Statistics Unit 3: Collecting Data. It provides a structured learning flow, interactive study materials, progress tracking, and integration with an external AI assistant (Grok).",
  "version": "1.0.0",
  "purpose": "To guide students through the topics of AP Statistics Unit 3, offering video links, practice materials (PDFs), a recommended learning process via a flowchart and React component, and tools to facilitate AI-tutored practice sessions using Grok.",
  "technologies": [
    {
      "name": "HTML",
      "version": "5",
      "role": "Structure"
    },
    {
      "name": "CSS",
      "details": [
        "Tailwind CSS (via CDN)",
        "Inline <style> block for tab/custom styles"
      ],
      "role": "Styling"
    },
    {
      "name": "JavaScript",
      "details": [
        "Vanilla JS for core logic, DOM manipulation, event handling, localStorage interaction.",
        "React & ReactDOM (via CDN) for the 'Learning Flow' component.",
        "Babel (via CDN) for JSX transpilation.",
        "Mermaid JS (via CDN) for flowchart rendering."
      ],
      "role": "Interactivity, UI Rendering, Data Management"
    }
  ],
  "components": [
    {
      "name": "Header",
      "selector": "header",
      "description": "Displays the page title, subtitle, and AP exam weight for Unit 3."
    },
    {
      "name": "Tab Navigation",
      "selector": ".flex.mb-0.border-b",
      "description": "Provides buttons to switch between different content sections (Learning Flow, Flowchart, Grok Prompt, Study Materials). Uses JS to toggle 'active' class.",
      "elements": [
        {"id": "tab-learning-flow"},
        {"id": "tab-flowchart"},
        {"id": "tab-grok-prompt"},
        {"id": "tab-study-materials"}
      ]
    },
    {
      "name": "Tab Content Area",
      "selector": ".bg-white.rounded-b-lg.shadow-md.p-6",
      "description": "Container holding the content for the active tab. Uses JS to toggle 'active' class on child divs.",
      "children": [
        {
          "name": "Learning Flow Tab",
          "selector": "#content-learning-flow",
          "description": "Contains the React application root.",
          "elements": [
            {"id": "learning-flow-app", "description": "Root element for the React component 'APStatLearningFlow'."}
          ]
        },
        {
          "name": "Flowchart Tab",
          "selector": "#content-flowchart",
          "description": "Displays a Mermaid flowchart illustrating the recommended learning process.",
          "elements": [
            {"id": "flowchart", "description": "Mermaid container div, populated by JS."},
            {"selector": ".grid.gap-2.text-sm", "description": "Legend explaining the color coding of the flowchart nodes."}
          ]
        },
        {
          "name": "Grok Prompt Tab",
          "selector": "#content-grok-prompt",
          "description": "Provides tools to start a learning session with Grok AI.",
          "elements": [
            {"id": "grok-prompt", "selector": "pre", "description": "Displays the pre-defined prompt for the Grok AI tutor."},
            {"id": "copy-button", "description": "Button to copy the Grok prompt to the clipboard."},
            {"selector": "a[href='https://grok.com']", "description": "Link to open Grok website."},
            {"selector": "ol", "description": "Step-by-step instructions for using the prompt and PDFs with Grok."},
            {"id": "current-topic-info", "description": "Displays details (name, description, video/PDF links with checkboxes) of the current topic identified by the JS logic."},
            {"id": "complete-current-topic-btn", "description": "Button to mark the current topic as fully completed."},
            {"id": "quick-access-topics", "description": "Displays compact cards for all topics, allowing quick navigation and viewing/updating of completion status via checkboxes."}
          ]
        },
        {
          "name": "Study Materials Tab",
          "selector": "#content-study-materials",
          "description": "Lists all study topics with associated videos and PDF materials, allowing progress tracking.",
          "elements": [
            {"id": "all-completed-container", "description": "Message displayed when all topics are completed."},
            {"id": "reset-progress-btn", "description": "Button (within #all-completed-container) to reset all tracked progress."},
             {"selector": ".bg-blue-50.border.border-blue-200", "description": "Banner promoting the Grok Prompt tab."},
            {"id": "topic-select", "description": "Dropdown to select and jump to a specific topic card."},
            {"id": "progress-container", "description": "Container for the progress bar."},
            {"id": "progress-bar", "description": "Visually represents the overall completion percentage."},
            {"id": "topic-cards-container", "description": "Container where individual topic cards are dynamically generated by JS."},
            {"id": "next-topic-container", "description": "Displays the next suggested topic (hidden when all complete)."},
            {"id": "next-topic-card", "description": "Holds the card for the next topic."}
          ]
        }
      ]
    },
    {
      "name": "React Component: APStatLearningFlow",
      "selector": "#learning-flow-app",
      "description": "A functional React component providing a step-by-step guide on how to use the page and Grok for learning. Manages its own internal state for the current step."
    }
  ],
  "dataStructures": [
    {
      "name": "flowchartDefinition",
      "type": "JavaScript String",
      "description": "Contains the Mermaid syntax definition for the learning flowchart."
    },
    {
      "name": "grokPrompt",
      "type": "JavaScript String",
      "description": "Contains the predefined text prompt to be used with the Grok AI assistant."
    },
    {
      "name": "pdfFiles",
      "type": "JavaScript Array of Objects",
      "description": "The core data structure holding information about each learning topic.",
      "objectSchema": {
        "id": "String (e.g., '3-1')",
        "name": "String (e.g., 'Topic 3.1')",
        "description": "String",
        "videos": "Array of Objects [{ url: String, altUrl: String, completed: Boolean, completionDate: String|null }]",
        "quizzes": "Array of Objects [{ questionPdf: String, answersPdf: String|null, quizId: String, completed: Boolean, completionDate: String|null }]",
        "current": "Boolean (Indicates if this is the current topic)",
        "isCapstone": "Boolean (Indicates if this is the final capstone topic)",
        "completed": "Boolean (Derived property, true if all videos/quizzes are completed)"
      }
    }
  ],
  "interactivity": [
    {
      "feature": "Tab Switching",
      "trigger": "Click on tab buttons (.tab-button)",
      "action": "Updates 'active' class on buttons and corresponding content divs (#content-...). Renders Mermaid chart if Flowchart tab is activated. Initializes/updates content for Study Materials and Grok Prompt tabs if activated."
    },
    {
      "feature": "Flowchart Rendering",
      "trigger": "Switching to the Flowchart tab",
      "action": "Calls `mermaid.initialize()` and `renderFlowchart()` to display the diagram defined in `flowchartDefinition`."
    },
    {
      "feature": "Grok Prompt Copy",
      "trigger": "Click on #copy-button",
      "action": "Copies the content of `grokPrompt` string to the clipboard using `navigator.clipboard` API with fallback."
    },
    {
      "feature": "Progress Tracking (Checkboxes)",
      "trigger": "Clicking checkboxes within topic cards (Study Materials tab) or current/quick-access topic displays (Grok Prompt tab)",
      "action": "Calls `handleItemCompletionChange()` which updates the `completed` status and `completionDate` for the specific video or quiz within the `pdfFiles` array. Saves progress to localStorage via `saveTopicProgress()`. Refreshes relevant UI parts (topic cards, progress bar, current topic info, quick access cards)."
    },
    {
      "feature": "Progress Tracking (Mark Topic Completed)",
      "trigger": "Click on '.mark-completed-btn' (Study Materials) or '#complete-current-topic-btn' (Grok Prompt)",
      "action": "Calls `markTopicAsCompleted()` which sets all videos and quizzes within that topic to completed in `pdfFiles`. Updates the 'current' topic status. Saves progress and refreshes UI."
    },
    {
      "feature": "Topic Selection (Dropdown)",
      "trigger": "Changing the value of #topic-select",
      "action": "Scrolls the corresponding topic card into view within the Study Materials tab and applies a brief pulse animation."
    },
    {
      "feature": "Current Topic Update",
      "trigger": "Completing a topic, clicking a quick access card (Grok Prompt tab)",
      "action": "Updates the `current` flag in the `pdfFiles` array. Refreshes `#current-topic-info` and highlights in `#quick-access-topics`."
    },
    {
      "feature": "Reset Progress",
      "trigger": "Click on #reset-progress-btn (Study Materials) or the reset button appearing in Grok Prompt tab when all complete",
      "action": "Calls `resetProgress()` which prompts for confirmation, clears completion status in `pdfFiles`, resets the first topic as current, saves to localStorage, and refreshes the entire UI."
    },
    {
      "feature": "React Component Navigation",
      "trigger": "Clicking 'Previous Step' / 'Next Step' buttons within the Learning Flow tab",
      "action": "Updates the internal state of the `APStatLearningFlow` component to display the corresponding step."
    },
    {
      "feature": "Video Backup Tooltip",
      "trigger": "Hovering over the (+) icon next to video links",
      "action": "Displays a tooltip with a link to the Google Drive backup video."
    }
  ],
  "stateManagement": {
    "primaryState": "Topic completion status and current topic focus",
    "location": "JavaScript `pdfFiles` array",
    "persistence": "Saved to `localStorage` under the key 'apStatsTopicProgress' using `JSON.stringify`.",
    "initialization": "Loaded from `localStorage` on page load or tab switch via `loadTopicProgress()`. Defaults to first topic as current if no saved state."
  },
  "dependencies": [
    {"url": "https://cdn.tailwindcss.com", "type": "Script (CSS Framework)"},
    {"url": "https://unpkg.com/react@18/umd/react.production.min.js", "type": "Script (React Library)"},
    {"url": "https://unpkg.com/react-dom@18/umd/react-dom.production.min.js", "type": "Script (React DOM)"},
    {"url": "https://unpkg.com/@babel/standalone/babel.min.js", "type": "Script (JSX Transpiler)"},
    {"url": "https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js", "type": "Script (Diagramming Library)"}
  ],
  "styling": {
    "framework": "Tailwind CSS",
    "custom": "Inline `<style>` block provides specific styles for tab buttons (.tab-button, .tab-button.active) and tab content visibility (.tab-content, .tab-content.active), plus pulse animation and completed state styling."
  }
}